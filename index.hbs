{{!< default}}
{{!-- The tag above means: insert everything in this file
  into the {body} of the default.hbs template --}}
{{#contentFor "extraheads"}}
    <link rel="stylesheet" type="text/css" href="{{asset "built/my.css"}}"/>
    <link rel="stylesheet" type="text/css" href="{{asset "built/animate.css"}}"/>
{{/contentFor}}

{{> site-header}}

{{!--Special header-image.hbs partial to generate the background image--}}


<!-- Slideshow container -->
<div class="allSlides">
    <div class="slideshow-container">
        {{#get "posts" filter="tag:-english+tag:german" limit="5"}}
            {{#foreach posts}}

                <!-- Full-width images with number and caption text -->
                <div class="mySlides fade">

                    <a href="{{url}}">
                        <img class="post-card-image header-img"
                             srcset="{{img_url feature_image size="s"}} 300w,
      {{img_url feature_image size="m"}} 600w,
      {{img_url feature_image size="xl"}} 2000w"
                             sizes="(max-width: 1000px) 400px, 700px"
                             src="{{img_url feature_image size="xl"}}"
                             alt="{{title}}"
                        />

                        <div class="text">

                            <h1 class="head-title animated fadeInDown faster">{{title}}</h1>
                            <p class="head-desc animated fadeInUp">{{excerpt words="20"}} </p>
                            <p class="head-desc animated fadeInLeft caps">{{t "Read More"}}</p>

                        </div>
                    </a>
                </div>
            {{/foreach}}
        {{/get}}

        <!-- Next and previous buttons -->
        <a class="prev" onclick="plusSlides(-1)">&#10094;</a>
        <a class="next" onclick="plusSlides(1)">&#10095;</a>
    </div>
</div>

<input type="hidden" id="slideChange"/>


{{!-- The main content area --}}

<section id="caption" class="blockquote">
    <center>{{t "front caption text"}}</center>
    <hr/>
</section>



<main id="site-main" class="site-main outer">
    <div class="inner posts">

        <div class="post-feed no-load">
            {{#get "posts" filter="tag:hash-vorgestellte" limit="1"}}
                {{#foreach posts}}
                {{!-- The tag below includes the markup for each post - partials/post-card.hbs --}}
                    {{> "post-card"}}
                {{/foreach}}
            {{/get}}
            {{#get "posts" filter="tag:hash-empfehlung-der-redaktion" limit="1"}}
                {{#foreach posts}}
                {{!-- The tag below includes the markup for each post - partials/post-card.hbs --}}
                    {{> "post-card"}}
                {{/foreach}}
            {{/get}}
            {{#get "posts" filter="tag:hash-nachaltigskeitsziel-des-monats" limit="1"}}
                {{#foreach posts}}
                {{!-- The tag below includes the markup for each post - partials/post-card.hbs --}}
                    {{> "post-card"}}
                {{/foreach}}
            {{/get}}
            {{#get "posts" filter="tag:hash-kurt-and-gut" limit="1"}}
                {{#foreach posts}}
                {{!-- The tag below includes the markup for each post - partials/post-card.hbs --}}
                    {{> "post-card"}}
                {{/foreach}}
            {{/get}}
            {{> "news-and-events"}}

        </div>

    </div>
</main>

{{!-- Ribbon --}}
<section>
    {{> "ribbon"}}
    <center class="ribbon-caption">{{t "ribbon caption"}}</center>
</section>

{{!-- The #contentFor helper here will send everything inside it up to the matching #block helper found in default.hbs --}}
{{#contentFor "scripts"}}
    <script>

    var slideIndex = 1;
    showSlides(slideIndex);

    // Next/previous controls
    function plusSlides(n) {
        showSlides(slideIndex += n);
    }

    // Thumbnail image controls
    function currentSlide(n) {
        showSlides(slideIndex = n);
    }

    function showSlides(n) {
        var i;
        var slides = document.getElementsByClassName("mySlides");

        if (n > slides.length) {slideIndex = 1}
            if (n < 1) {slideIndex = slides.length}
                for (i = 0; i < slides.length; i++) {
                    slides[i].style.display = "none";
                }
                slides[slideIndex-1].style.display = "block";
                $('#slideChange').trigger("change");
            }


            (function(){
                var wallopEl = document.querySelector('.slideshow-container'),
                autoPlayMs = 6000,
                nextTimeout;
                nextTimeout = setTimeout(function() {
                    plusSlides(1);
                }, autoPlayMs);
                $('#slideChange').on('change', function() {
                    clearTimeout(nextTimeout);
                    nextTimeout = setTimeout(function() {
                        plusSlides(1);
                    }, autoPlayMs);
                });

                wallopEl.addEventListener('mouseenter', function() {
                    clearTimeout(nextTimeout);
                });
                wallopEl.addEventListener('mouseleave', function() {
                    nextTimeout = setTimeout(function() {
                        plusSlides(1);
                    }, autoPlayMs);
                });
            })();




        // NOTE: Scroll performance is poor in Safari
        // - this appears to be due to the events firing much more slowly in Safari.
        //   Dropping the scroll event and using only a raf loop results in smoother
        //   scrolling but continuous processing even when not scrolling
        $(document).ready(function () {

            var nav = document.querySelector('.header');
            var feed = document.querySelector('#caption');

            var lastScrollY = window.scrollY;
            var lastWindowHeight = window.innerHeight;
            var lastDocumentHeight = $(document).height();
            var ticking = false;

            function onScroll() {
                lastScrollY = window.scrollY;
                requestTick();
            }

            function onResize() {
                lastWindowHeight = window.innerHeight;
                lastDocumentHeight = $(document).height();
                requestTick();
            }

            function requestTick() {
                if (!ticking) {
                    requestAnimationFrame(update);
                }
                ticking = true;
            }

            function update() {
                var trigger = feed.getBoundingClientRect().top + window.scrollY;
                var progressMax = lastDocumentHeight - lastWindowHeight;

                // show/hide nav
                if (lastScrollY >= trigger - 20) {
                    nav.classList.remove('transparent');
                } else {
                    nav.classList.add('transparent');
                }

                ticking = false;
            }

            window.addEventListener('scroll', onScroll, {
                passive: true
            });
            window.addEventListener('resize', onResize, false);

            update();

        });
    </script>

{{/contentFor}}